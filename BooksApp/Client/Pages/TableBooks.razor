@using System.Reflection
@inherits TableBooksBase
<table id="@TablaId" class="table table-striped table-hover" style="width:100%">
    <thead>
        <tr>
            @foreach (var item in Lista)
            {


                if (item.DataType == TipoDato._int || item.DataType == TipoDato._float || item.DataType == TipoDato._double)
                {
                    <th class="dt-right">@(string.IsNullOrWhiteSpace(item.Mostrar)?
                        item.Name : item.Mostrar)</th>
                }
                else if (item.DataType == TipoDato._DateTime)
                {
                    <th class="dt-center">@(string.IsNullOrWhiteSpace(item.Mostrar)?
                        item.Name:  item.Mostrar)</th>
                }
                else if (item.DataType == TipoDato._boolean)
                {


                    <th class="dt-center">@(string.IsNullOrWhiteSpace(item.Mostrar) 
                        ?item.Name : item.Mostrar)</th>
                }
                else
                {
                    <th>@(string.IsNullOrWhiteSpace(item.Mostrar)?
                        item.Name : item.Mostrar)</th>
                }
            }
            @if (!OcultarBotones | !OcultarBotonPersonalizado)
            {


                <th><b> <i class="float-right oi oi-menu"></i></b></th>
            }


        </tr>
    </thead>
    <tbody>

        @foreach (var x in ListaParameter)
        {
            <tr>
                @foreach (var item in Lista)
                {


                    @if (item.DataType == TipoDato._int || item.DataType == TipoDato._float || item.DataType == TipoDato._double)
                    {
                        Index++;
                        <td class="dt-right">@x.GetType().GetProperty(item.Name).GetValue(x).ToString()</td>
                    }
                    else if (item.DataType == TipoDato._DateTime)
                    {
                        Index++;
                        <td class="dt-center">@Convert.ToDateTime(x.GetType().GetProperty(item.Name).GetValue(x).ToString()).ToString("dd/MM/yyyy hh:mm:s")</td>
                    }
                    else if (item.DataType == TipoDato._boolean)
                    {

                        Index++;

                        <td class="dt-center">
                            @if ((bool)x.GetType().GetProperty(item.Name).GetValue(x) == true)
                            {
                                <div class="custom-control custom-switch">

                                    <input type="checkbox" class="custom-control-input" checked id="customControlValidation1" disabled>
                                    <label class="custom-control-label" for="customControlValidation1"></label>
                                </div>
                            }
                            else
                            {
                                <div class="custom-control custom-switch">
                                    <input type="checkbox" class="custom-control-input" id="customControlValidation1" disabled>
                                    <label class="custom-control-label" for="customControlValidation1"></label>
                                </div>
                            }



                        </td>
                    }
                    else
                    {
                        Index++;
                        <td>@x.GetType().GetProperty(item.Name).GetValue(x).ToString()</td>
                    }

                    @if (!OcultarBotones && ContadorCamposMostrar == Index)
                    {
                        Index = 0;
                        <td class="float-right">
                            <div class="btn-group">
                                @if (!OcultarBotonPersonalizado)
                                {
                                    <a class="btn btn-dark text-white" @onclick=@(async ()=> await GetMetPersonalizado((x.GetType()
                                                                                           .GetProperty(
                                                                                           OType.GetProperties()
                                                                                           .AsParallel()
                                                                                           .Where(x => ((Identidad)x.GetCustomAttribute(typeof(Identidad), true)) != null)
                                                                                           .FirstOrDefault().Name
                                                                                           ).GetValue(x))))><i class="@IconoBtnPersonalizado"> </i><b>@(string.IsNullOrWhiteSpace(NombrebtnPersonalizado)?"*":NombrebtnPersonalizado)</b></a>

                                }
                                @if (!OcultarBotonVista)
                                {

                                    <a class="btn btn-outline-info text-dark" @onclick=@( async()=> await GetVista(
                                                                                           (x.GetType()
                                                                                           .GetProperty(
                                                                                           OType.GetProperties()
                                                                                           .AsParallel()
                                                                                           .Where(x => ((Identidad)x.GetCustomAttribute(typeof(Identidad), true)) != null)
                                                                                           .FirstOrDefault().Name
                                                                                           ).GetValue(x))))><i class="oi oi-eye"></i><b>Ver</b></a>

                                }
                                @if (!OcultarBotonEditar)
                                {
                                    <a class="btn btn-outline-warning text-dark" @onclick=@( async()=> await GetEdit(x.GetType().GetProperty( OType.GetProperties()
                                                                                          .AsParallel()
                                                                                          .Where(x => ((Identidad)x.GetCustomAttribute(typeof(Identidad), true)) != null)
                                                                                          .FirstOrDefault().Name
                                                                                          ).GetValue(x)))><i class="oi oi-pencil"></i><b>Modificar</b></a>

                                }
                                @if (!OcultarBotonAnular)
                                {
                                    <a class="btn btn-outline-danger text-dark" @onclick=@( async()=> await GetDelete(
                                                                                          x.GetType()
                                                                                          .GetProperty(
                                                                                          OType.GetProperties()
                                                                                          .AsParallel()
                                                                                          .Where(x => ((Identidad)x.GetCustomAttribute(typeof(Identidad), true)) != null || (((CampoMostrar)x.GetCustomAttribute(typeof(CampoMostrar), true))!=null) && ((CampoMostrar)x.GetCustomAttribute(typeof(CampoMostrar), true)).Index==0)
                                                                                          .FirstOrDefault().Name
                                                                                          ).GetValue(x)))><i class="oi oi-circle-x"> </i><b>Eliminar</b></a>

                                }


                            </div>
                        </td>
                    }
                    else if (ContadorCamposMostrar == Index)
                    {
                        @if (!OcultarBotonPersonalizado)
                        {
                            Index = 0;
                            <td class="dt-right">
                                <a class="btn btn-dark text-white"><i class="@(string.IsNullOrWhiteSpace(IconoBtnPersonalizado)?"oi-bug":IconoBtnPersonalizado) "> </i><b>@(string.IsNullOrWhiteSpace(NombrebtnPersonalizado)?"*":NombrebtnPersonalizado)</b></a>
                            </td>
                        }
                    }

                }
            </tr>
        }

    </tbody>

</table>